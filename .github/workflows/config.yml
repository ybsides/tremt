name: "Compute Config variables"

on:
  workflow_call:
    inputs:
      image-name-prefix:
        required: false
        type: string
        default: "ghcr.io/ybsides/tremt"
      node-version:
        required: false
        type: string
        default: "22"
      python-version:
        required: false
        type: string
        default: "3.12"
      stack-name:
        required: false
        type: string
        default: "tremt-ybsides-tangrama-com-br"
      environment:
        required: false
        type: string
        default: "tremt-ybsides.tangrama.com.br"
    outputs:
      acceptance:
        description: "Flag reporting if we should run the acceptance jobs"
        value: ${{ jobs.config.outputs.acceptance }}
      backend:
        description: "Flag reporting if we should run the backend jobs"
        value: ${{ jobs.config.outputs.backend }}
      devops:
        description: "Flag reporting if we should run the devops jobs"
        value: ${{ jobs.config.outputs.devops }}
      docs:
        description: "Flag reporting if we should run the docs jobs"
        value: ${{ jobs.config.outputs.docs }}
      frontend:
        description: "Flag reporting if we should run the frontend jobs"
        value: ${{ jobs.config.outputs.frontend }}
      varnish:
        description: "Flag reporting if we should run the varnish jobs"
        value: ${{ jobs.config.outputs.varnish }}
      base-tag:
        description: "Base tag to be used when creating container images"
        value: ${{ jobs.config.outputs.base-tag }}
      event-name:
        description: "Event name triggering the workflow"
        value: ${{ github.event_name }}
      image-name-prefix:
        description: "Image name prefix for container images"
        value: ${{ inputs.image-name-prefix }}
      stack-name:
        description: "Stack name for the deployment"
        value: ${{ inputs.stack-name }}
      environment:
        description: "Environment to be used for the deployment"
        value: ${{ inputs.environment }}
      node-version:
        description: "Node version to be used"
        value: ${{ inputs.node-version }}
      python-version:
        description: "Python version to be used"
        value: ${{ inputs.python-version }}
      plone-version:
        description: "Plone version to be used"
        value: ${{ jobs.config.outputs.plone-version }}
      volto-version:
        description: "Volto version to be used"
        value: ${{ jobs.config.outputs.volto-version }}

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      acceptance: ${{ steps.filter.outputs.acceptance }}
      backend: ${{ steps.filter.outputs.backend }}
      devops: ${{ steps.filter.outputs.devops }}
      docs: ${{ steps.filter.outputs.docs }}
      frontend: ${{ steps.filter.outputs.frontend }}
      varnish: ${{ steps.filter.outputs.varnish }}
      base-tag: ${{ steps.vars.outputs.base-tag }}
      plone-version: ${{ steps.vars.outputs.plone-version }}
      volto-version: ${{ steps.vars.outputs.volto-version }}

    steps:
      - name: Compute several vars needed for the CI
        id: vars
        shell: bash
        run: |
          echo "base-tag=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "plone-version=$(cat backend/version.txt)" >> $GITHUB_OUTPUT
          python3 -c 'import json; data = json.load(open("./frontend/mrs.developer.json")); print("volto-version=" + (data["core"].get("tag") or "latest"))' >> $GITHUB_OUTPUT

      - name: Filter paths
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            acceptance:
              - '.github/workflows/backend*'
              - '.github/workflows/frontend*'
              - '.github/workflows/config*'
              - 'backend/**'
              - 'frontend/**'
            backend:
              - 'backend/**'
              - '.github/workflows/backend*'
              - '.github/workflows/config*'
            devops:
              - 'devops/**'
              - '.github/workflows/config*'
            docs:
              - '.readthedocs.yaml'
              - 'docs/**'
              - '.github/workflows/docs.yaml'
              - '.github/workflows/config*'
            frontend:
              - 'frontend/**'
              - '.github/workflows/frontend*'
              - '.github/workflows/config*'
            varnish:
              - 'devops/varnish/**'
              - '.github/workflows/varnish*'
              - '.github/workflows/config*'

      - name: Test vars
        run: |
          echo "base-tag: ${{ steps.vars.outputs.base-tag }}"
          echo 'plone-version: ${{ steps.vars.outputs.plone-version }}'
          echo 'volto-version: ${{ steps.vars.outputs.volto-version }}'
          echo 'event-name: ${{ github.event_name }}'
          echo 'Paths - acceptance: ${{ steps.filter.outputs.acceptance }}'
          echo 'Paths - backend: ${{ steps.filter.outputs.backend }}'
          echo 'Paths - devops: ${{ steps.filter.outputs.devops }}'
          echo 'Paths - docs: ${{ steps.filter.outputs.docs }}'
          echo 'Paths - frontend: ${{ steps.filter.outputs.frontend }}'
          echo 'Paths - varnish: ${{ steps.filter.outputs.varnish }}'
